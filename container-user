#!/bin/bash

# dependencies #

. /data/data/com.termux/files/usr/bin/console

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="12-22-2021"

# usage #

if [[ $# -gt 3 ]]
then
	echo
	echo -e "Usage: ${script} [User Name] | [First Name] [Last Name] | [OPTION]"
	echo

	exit 1
fi

if [[ $# -eq 0 ]]
then
	user_name="${termux}"
fi

if [[ $# -eq 1 ]]
then
	user_name="${1}"
fi

if [[ $# -eq 2 ]]
then
	first_name="${1}"
	last_name="${2}"
	user_name="${first_name,,}"
fi

if [[ $# -eq 3 ]]
then
	user_name="${1}"
	first_name="${2}"
	last_name="${3}"
fi

while (($#))
do
	case "${4}" in
		-h|--help)
			echo
			echo -e "Usage: ${script} | [First Name] [Last Name] | [OPTION]"
			echo
			echo -e "Options:"
			echo
			echo -e "-h, --help \t Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

		"")
			# handle empty argument:
			# use default values specified in script

			:
		;;

		*)
			echo
			echo -e "Usage: ${script} | [First Name] [Last Name] | [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1
		;;
		
	esac

	shift
done

# prompt #

console.script "Setting up ${script#*-}"
echo

# variables #

# defaults #

# functions #

add_information () {
	# get 'user' information

	console.inf "This information will be used to set up the user account."
	echo

	console.wrn "Information is required to set up your environment:"
	console.wrn "Fields cannot be empty."
	echo

	# values #

	if [ -z "${user_name}" ]
	then
		information_list+=(
			user_name
		)
	fi

	information_list+=(
		first_name
		last_name
		user_email
		user_password
	)

	# handle user input for information_list

	console_rtn=()

	console.input ${information_list[@]}

	eval ${console_rtn[@]}
}

add_user () {
	# generate 'user' account

	console.fwd "generating account..."
	echo

	room_number=""
	work_number=""
	home_number=""

	# generate user entry
	# silent configuration:
	# set --gecos and --disabled-password for fully silent execution

	adduser																								\
		--gecos "${first_name} ${last_name},${room_number},${work_number},${home_number},${user_email}"	\
		--shell "${SHELL}"																				\
		--disabled-password "${user_name}"
}

add_superuser () {
	# generate 'user' superuser privilege

	console.fwd "Generating superuser privilege..."
	echo

	sudo_id=$(cat /etc/group | grep sudo | cut -d : -f 3)

	[ -z "${sudo_id}" ] && sudo_id=27

	# /etc/group:
	# group_name:x:group_number:user_name

	usermod -a -G "${sudo_id}" "${user_name}"

	# generate sudoers directory

	console.directory  /etc/sudoers.d

	# set superuser privilege password override

	echo "${user_name} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/"${user_name}"

	# fix superuser privilege runtime errors

	echo "Set disable_coredump false" >> /etc/sudo.conf

	# fix ownership on superuser privilege password override

	chmod 0440 /etc/sudoers.d/"${user_name}"
}

add_password () {
	# generate 'user' password

	console.fwd "Setting password..."
	echo

	# generate password credential for 'user' entry
	# silent configuration:
	# use 'chpasswd' to append user password to account

	chpasswd <<< "${user_name}:${user_password}"
}

add_runtime () {
	# generate 'user' runtime directory structure

	console.fwd "Setting runtime..."
	echo

	# get user id and group

	user_uid="$(id -u ${user_name})"
	user_gid="$(id -g ${user_name})"

	# generate runtime directory

	console.directory /run/user "${user_uid}"
	console.directory /run/user "${user_name}"

	# set runtime directory permissions

	chmod 700 /run/user/"${user_uid}"
	chmod 700 /run/user/"${user_name}"

	# set runtime directory ownership

	chown "${user_uid}":"${user_gid}" -R /run/user/"${user_uid}"
	chown "${user_uid}":"${user_gid}" -R /run/user/"${user_name}"
}

# generate user account and relevant permission sets

add_information

# use /dev/null redirection:
# 'adduser' prevents stdout error redirect - cannot use 'console.silence'

add_user > /dev/null

# use /dev/null redirection:
# 'chpasswd' prevents stdout error redirect - cannot use 'console.silence'

add_password > /dev/null

add_superuser

add_runtime