#!/bin/bash

# dependencies #

curl -sL get.trmnl.me/console/console > "${PREFIX}"/bin/console && . "${PREFIX}"/bin/console

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="12-22-2021"

# usage #

while (($#))
do
	case "${1}" in
		-i|--i3wm)
			option="i3wm"
		;;

		-x|--xfce)
			option="xfce"
		;;

		-n|--none)
			option="none"
		;;

		-h|--help)
			echo
			echo -e "USAGE:"
			echo
			echo -e "-i, --i3wm    I3WM setup: install i3 window manager and utilities."
			echo -e "-x, --xfce    XFCE4 setup: install XFCE desktop environment and utilities."
			echo -e "-n, --none    No DE setup: console access to environment and utilities."
			echo
			echo -e "-h, --help    Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

		"")
			# handle empty argument:
			# use default values specified in script

			:
		;;

		*)
			echo
			echo -e "Usage: ${script} | [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1

		;;

		esac

	shift

done

# clear #

console.clear

# prompt #

console.script "Setting up ${script#*-}"
echo

# variables #

export option="${option}"

# defaults #

[ -z "${option}" ] && option="i3wm" && export option="${option}"

# functions #

container_command () {
	# run container commands without session login

	PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

	# assume 'termux-exec' is installed

	unset LD_PRELOAD

	# run as 'root' with default system parameters

	proot																		\
	--kill-on-exit																\
	--link2symlink																\
	--rootfs="${PREFIX}"/cnt													\
	--change-id=0:0																\
	--pwd="/root"																\
	--bind="/apex:/apex"														\
	--bind="/data:/data"														\
	--bind="/dev:/dev"															\
	--bind="/dev/urandom:/dev/random"											\
	--bind="/proc:/proc"														\
	--bind="/proc/self/fd:/dev/fd"												\
	--bind="/proc/self/fd/0:/dev/stdin"											\
	--bind="/proc/self/fd/1:/dev/stdout"										\
	--bind="/proc/self/fd/2:/dev/stderr"										\
	--bind="/storage:/storage"													\
	--bind="/sys:/sys"															\
	--bind="/system:/system"													\
	--bind="/vendor:/vendor"													\
		/usr/bin/env -i															\
		"PATH=${PATH}"															\
		"TERM=${TERM}"															\
	"${@}"
}

# run failsafe package install:
# termux package servers are sometimes unresponsive or badly authenticated

console.fwd "Please wait..."
echo

bash -c 'yes | pkg update'														>> /dev/null 2>&1
bash -c 'yes | pkg upgrade'														>> /dev/null 2>&1
bash -c 'yes | pkg install proot debootstrap'									>> /dev/null 2>&1
bash -c 'yes | pkg update'														>> /dev/null 2>&1

# download utilities

utilities_list+=(
	termux-additions
	termux-directories
	termux-packages
	termux-storage
	termux-update
	container-expand
	container-image
	container-packages
	container-repositories
	container-session
	container-system
	container-user
	container-vnc
)

for utility in ${utilities_list[@]}
do
	console.download get.dxtp.app "${PREFIX}"/bin "${utility}"
done

# in order of execution

if [ ! -f "${PREFIX}"/bin/dextop-checkpoint-complete ]
then
	# termux

	if [ ! -f "${PREFIX}"/bin/termux-checkpoint-complete ]
	then
		"${PREFIX}"/bin/termux-update
		"${PREFIX}"/bin/termux-directories
		"${PREFIX}"/bin/termux-storage
		"${PREFIX}"/bin/termux-packages
		"${PREFIX}"/bin/termux-additions

		console.file "${PREFIX}"/bin termux-checkpoint-complete
	fi

	# container

	if [ ! -f "${PREFIX}"/bin/container-checkpoint-complete ]
	then
		"${PREFIX}"/bin/container-image
		"${PREFIX}"/bin/container-system

		container_command "${PREFIX}"/bin/container-expand
		container_command "${PREFIX}"/bin/container-repositories
		container_command "${PREFIX}"/bin/container-packages
		container_command "${PREFIX}"/bin/container-user

		console.file "${PREFIX}"/bin container-checkpoint-complete
	fi

	console.file "${PREFIX}"/bin dextop-checkpoint-complete
fi