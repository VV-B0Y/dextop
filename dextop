#!/bin/bash

# dependencies #

curl -sL get.cnsl.app/console > "${PREFIX}"/bin/console && source "${PREFIX}"/bin/console

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="08-12-2021"

# usage #

while (($#))
do
	case "${1}" in
		-t|--termux)
			dextop_option="termux"
		;;
		
		-p|--proot)
			dextop_option="proot"
		;;
				
		-h|--help)
			echo
			echo -e "USAGE:"
			echo
			echo -e "-t, --termux \t\t Setup Termux environment - VNC setup not included."
			echo -e "-p, --proot \t\t Setup Proot environment - VNC setup included."
			echo
			echo -e "-h, --help \t\t Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

		"")
			# handle empty argument
			# use default values specified in script

			:
		;;

		*)
			echo
			echo -e "Usage: ${script} | [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1

		;;

		esac

	shift

done

# prompt #

console.inf "Initializing setup [ dextop ]."
echo

# variables #

# set defaults

[ -z "${dextop_option}" ] && dextop_option="proot"

# export variables

# source variables

[ -f "${PREFIX}"/bin/globals ] && source "${PREFIX}"/bin/globals

# clear

console.clear

# values #

console.fwd "Loading..."
echo

utilities_list=(
	termux-setup
	proot-setup
	vnc-setup
)

# download #

console.download get.dxtp.app "${BINARIES_DIRECTORY}" ${utilities_list[@]}

# values #

termux_list=(
	termux-setup
)

proot_list=(
	proot-setup
)

vnc_list=(
	vnc-setup
)

# initialize setup list

setup_list=()

# options #

# termux

if [[ "${dextop_option}" = "termux" ]]
then
	# populate setup list
	
	setup_list+=(
		${termux_list[@]}
		)
fi

# proot

if [[ "${dextop_option}" = "proot" ]]
then
	# populate setup list

	setup_list+=(
		${termux_list[@]}
		${proot_list[@]}
		${vnc_list[@]}
	)
fi

# setup #

for setup in ${setup_list[@]}
do
	console.run "${BINARIES_DIRECTORY}"/"${setup}"
done