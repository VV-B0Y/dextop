#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="06-20-2023"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"
echo

# variables ////////////////////////////////////////////////////////////////////

packages_url="https://f-droid.org/en/packages"
repository_url="https://f-droid.org/repo"

# defaults /////////////////////////////////////////////////////////////////////

# functions ////////////////////////////////////////////////////////////////////

clean () {
	rm -rf "${PREFIX}"/tmp/*.apk
}

trap 'clean' EXIT

open_intent () {
	unset open_command

	open_command+="am broadcast"
	open_command+=" --user 0"
	open_command+=" -a android.intent.action.VIEW"
	open_command+=" -n com.termux/com.termux.app.TermuxOpenReceiver"
	open_command+=" -d ${@}"

	frobulator.silence "${open_command}"
}

# notice

frobulator.err "Google Play Store updates deprecated since November 2020!"
echo

frobulator.wrn "Back up and uninstall the Google Play Store version of Termux."
echo

frobulator.msg "Visit the following wiki pages on how to proceed:"
echo

frobulator.inf "Backing up Termux: https://wiki.termux.com/wiki/Backing_up_Termux"
frobulator.inf "Installing Termux: https://wiki.termux.com/wiki/installation"
echo

frobulator.ins "Select 'Package Installer' when prompted to proceed."
echo

frobulator.separate

frobulator.ask "Check for updates?"

read reply
echo

if [[ "${reply}" = [yY] ]] || [[ "${reply}" = [yY][eE][sS] ]]
then
	# process update

	packages_list+=(
		termux-x11-shell-loader.apk
		termux-x11.apk
	)

	for package in ${packages_list[@]}
	do
		frobulator.download get.trmnl.me "${HOME}"/.local/apk ${package}

		open_intent "${package}"

		wait
	done
else
	frobulator.countdown 3 "Continuing" "[ ${script} ]"
	echo
fi
