#!/bin/bash

# dependencies #

. /data/data/com.termux/files/usr/bin/console
. /data/data/com.termux/files/usr/bin/dextop

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="11-14-2021"

# usage #

while (($#))
do
	case "${1}" in
		-r|--root)
			USERNAME="root"

			login_option="root"

			shift
		;;
			
		-u|--username)
			USERNAME="${2}"

			login_option="user"

			shift
		;;

		-a|--application)
			APPLICATION="${2}"

			login_option="application"

			shift
		;;

		-h|--help)
			echo
			echo -e "Usage: ${script} | [USERNAME] | [APPLICATION] | [OPTION]"
			echo
			echo -e "Options:"
			echo
			echo -e "-r, --root \t\t Specify 'root' as user for session login."
			echo -e "-u, --username \t Specify 'user' for session login."
			echo -e "-a, --application \t Specify application to start on session login."
			echo
			echo -e "-h, --help \t Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

			"")
				# handle empty argument:
				# use default values specified in script

				:
			;;

		*)
			echo
			echo -e "Usage: ${script} | [USERNAME] | [APPLICATION] | [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1
		;;
		
	esac

	shift
done

# prompt #

console.script "Logging in [ ${script%-*} ]"
echo

# variables #

# user

# assume termux-exec is present - unset LD_PRELOAD

unset LD_PRELOAD

# user verification

# verify user existence:
# loop through proot /etc/passwd and make sure 'user' exists
# and corresponds to 'username' then source environment variables from file
# default to 'root' if 'username' is invalid, not specified or does not exist

last_entry="$(tail -n 1 "${ROOT_DIRECTORY}"/etc/passwd)"

# authentication #

console.fwd "Authenticating..."
echo

while read -r entry
do
	IFS=':'

	read USER _ USER_ID GROUP_ID GECOS HOME SHELL <<< "${entry}"

	IFS=','

	read FULL_NAME ROOM_NUMBER WORK_PHONE HOME_PHONE USER_EMAIL <<< "${GECOS}"

	# reset IFS

	IFS=' '

	# messages:
	# verify login options and parameters
	
	if [[ -z "${USERNAME}" ]]
	then
		USERNAME="root"
		
		console.wrn "No user name - Defaulting [ '${USERNAME}' ]."
		echo

		# break out of loop - empty "${USERNAME}" - default to 'root'

		break
	fi
	
	if [[ "${login_option}" == "root" ]]
	then
		console.wrn "Logging in [ '${USERNAME}' ]."
		echo

		# break out of loop - login as 'root'

		break
	fi
	
	if [[ "${USERNAME}" == "${USER}" ]]
	then
		console.scs "Valid user name [ '${USERNAME}' ]."
		echo

		# break out of loop - matching "${USERNAME}"

		break
	fi

	if [[ "${entry}" == "${last_entry}" ]]
	then
		USERNAME="root"
	
		console.err "Invalid user name - Defaulting [ '${USERNAME}' ]."
		echo
	fi
	
	# specify login defaults
	
	if [[ -z "${USERNAME}" ]] ||  [[ "${login_option}" == "root" ]] || [[ "${entry}" == "${last_entry}" ]]
	then
		USER="root"
		USER_ID=0
		GROUP_ID=0
		FULL_NAME="root"
		HOME="/root"
		SESSION_NAME="CONSOLE"
		SHELL="/usr/bin/bash"
	fi
	
done < "${ROOT_DIRECTORY}"/etc/passwd

# system

# explicit proot setup defaults:
# used to specify the desktop session:
# login format / environment /pathnv'

# set path:
# in order of retreival

unset "${PATH}"

# proot container

[ -d "${ROOT_DIRECTORY}"/usr/local/sbin ]										&& PATH+="/usr/local/sbin:"
[ -d "${ROOT_DIRECTORY}"/usr/local/bin ]										&& PATH+="/usr/local/bin:"
[ -d "${ROOT_DIRECTORY}"/usr/sbin ]												&& PATH+="/usr/sbin:"
[ -d "${ROOT_DIRECTORY}"/usr/sbin ]												&& PATH+="/usr/bin:"
[ -d "${ROOT_DIRECTORY}"/sbin ]													&& PATH+="/sbin:"
[ -d "${ROOT_DIRECTORY}"/bin ]													&& PATH+="/bin:"

# termux shell

[ -d "${PREFIX}"/sbin ]															&& PATH+="${PREFIX}/sbin:"
[ -d "${PREFIX}"/bin ]															&& PATH+="${PREFIX}/bin:"

# android subsystem

[ -d "${ROOT_DIRECTORY}"/system/sbin ]											&& PATH+="/system/sbin:"
[ -d "${ROOT_DIRECTORY}"/system/bin ]											&& PATH+="/system/bin:"

PATH="${PATH}"

# set environment

COLORTERM="truecolor"
DISPLAY=":1"
LANG="C.UTF-8"
LOCALHOST="127.0.0.1"
SHELL="/usr/bin/bash"
TMPDIR="/tmp"

EDITOR="nano"
PAGER="less"

# base

[ "${desktop_option}" = "none" ]												&& SESSION_NAME="CONSOLE"

# i3 #

[ -f "${ROOT_DIRECTORY}"/usr/bin/i3 ]											&& SESSION_NAME="I3WM"

[ "${desktop_option}" = "i3wm" ]												&& SESSION_LOADER="i3"


# enlightenment #

[ -f "${ROOT_DIRECTORY}"/usr/bin/enlightenment ]								&& SESSION_NAME="EDE"

[ "${desktop_option}" = "ede" ]													&& SESSION_LOADER="enlightenment"

# kde #

[ -f "${ROOT_DIRECTORY}"/usr/bin/kwin ]											&& SESSION_NAME="KDE"

[ "${desktop_option}" = "kde" ]													&& SESSION="kde"
[ "${desktop_option}" = "kde" ]													&& SESSION_LOADER="plasmashell"
[ "${desktop_option}" = "kde" ]													&& SETTINGS_MANAGER="systemsettings5"
[ "${desktop_option}" = "kde" ]													&& WINDOW_MANAGER="kwin"

[ "${desktop_option}" = "kde" ]													&& BROWSER="konqueror"
[ "${desktop_option}" = "kde" ]													&& EMULATOR="konsole"
[ "${desktop_option}" = "kde" ]													&& RUNNER="krunner"
[ "${desktop_option}" = "kde" ]													&& VISUAL="kate"

# xfce #

[ -f "${ROOT_DIRECTORY}"/usr/bin/xfwm4 ]										&& SESSION_NAME="XFCE"

[ "${desktop_option}" = "xfce" ]												&& SESSION="xfce"
[ "${desktop_option}" = "xfce" ]												&& SESSION_LOADER="xfce4-session"
[ "${desktop_option}" = "xfce" ]												&& SETTINGS_MANAGER="xfsettingsd"
[ "${desktop_option}" = "xfce" ]												&& WINDOW_MANAGER="xfwm4"

[ "${desktop_option}" = "xfce" ]												&& BROWSER="midori"
[ "${desktop_option}" = "xfce" ]												&& EMULATOR="xfce4-terminal"
[ "${desktop_option}" = "xfce" ]												&& RUNNER="xfce4-appfinder"
[ "${desktop_option}" = "xfce" ]												&& VISUAL="mousepad"

# set defaults

[ -z "${MOUNT_DIRECTORY}" ]														&& MOUNT_DIRECTORY="${PREFIX%/*}/mnt"
[ -z "${ROOT_DIRECTORY}" ]														&& ROOT_DIRECTORY="${PREFIX%/*}/img"

[ -z "${BROWSER}" ]																&& BROWSER="${BROWSER}"
[ -z "${COLORTERM}" ]															&& COLORTERM="${COLORTERM}"
[ -z "${SESSION}" ]																&& SESSION="${SESSION}"
[ -z "${EDITOR}" ]																&& EDITOR="${EDITOR}"
[ -z "${PAGER}" ]																&& PAGER="${PAGER}"
[ -z "${RUNNER}" ]																&& RUNNER="${RUNNER}"
[ -z "${SHELL}" ]																&& SHELL="${SHELL}"
[ -z "${TERMINAL}" ]															&& TERMINAL="${TERM}"
[ -z "${VISUAL}" ]																&& VISUAL="${VISUAL}"

# verify application argument

if [ ! -z "${APPLICATION}" ]
then
	console.scs "Valid application name [ ${APPLICATION} ]."
	echo
	
	if [[ ! -f "${ROOT_DIRECTORY}"/usr/bin/"${APPLICATION}" ]]
	then
		console.err "Invalid application name [ ${APPLICATION} ]."
		echo
		
		unset "${APPLICATION}"
	fi

	console.fwd "Starting application [ ${SESSION_NAME} // ${USER} // ${APPLICATION} ]..."
	echo
else
	console.fwd "Starting session [ ${SESSION_NAME} // ${USER} ]..."
	echo
fi

# clear #

console.clear

# setup proot command arguments

unset "${command}"

command+="proot"
command+=" --kill-on-exit"
command+=" --link2symlink"
command+=" --rootfs=${ROOT_DIRECTORY}"
command+=" --change-id=${USER_ID}:${GROUP_ID}"
command+=" --pwd=${HOME}"
command+=" --bind=/apex"
command+=" --bind=/data"
command+=" --bind=/dev"
command+=" --bind=/dev/urandom:/dev/urandom"
command+=" --bind=${PREFIX%/*}/home:/home/termux"
command+=" --bind=/linkerconfig/ld.config.txt:/linkerconfig/ld.config.txt"
command+=" --bind=/proc"
command+=" --bind=/proc/self/fd:/dev/fd"
command+=" --bind=/proc/self/fd/0:/dev/stdin"
command+=" --bind=/proc/self/fd/1:/dev/stdout"
command+=" --bind=/proc/self/fd/2:/dev/stderr"
command+=" --bind=/storage"
command+=" --bind=/sys"
command+=" --bind=/system"
command+=" --bind=/vendor"
[ -d "${PREFIX%/*}"/storage/external ] && command+=" --bind=${PREFIX%/*}/storage/external:/media/External" || :
[ -d "${PREFIX%/*}"/storage/internal ] && command+=" --bind=${PREFIX%/*}/storage/internal:/media/Internal" || :
command+=" env -i"
command+=" ANDROID_ART_ROOT=${ANDROID_ART_ROOT}"
command+=" ANDROID_DATA=${ANDROID_DATA}"
command+=" ANDROID_I18N_ROOT=${ANDROID_I18N_ROOT}"
command+=" ANDROID_ROOT=${ANDROID_ROOT}"
command+=" ANDROID_RUNTIME_ROOT=${ANDROID_RUNTIME_ROOT}"
command+=" ANDROID_TZDATA_ROOT=${ANDROID_TZDATA_ROOT}"
command+=" BOOTCLASSPATH=${BOOTCLASSPATH}"
command+=" DEX2OATBOOTCLASSPATH=${DEX2OATBOOTCLASSPATH}"
command+=" PREFIX=${PREFIX}"
command+=" MAIN_DIRECTORY=${PREFIX%/*}"
command+=" BINARIES_DIRECTORY=${PREFIX}/bin"
command+=" LIBRARIES_DIRECTORY=${PREFIX}/lib"
command+=" ROOT_DIRECTORY=${ROOT_DIRECTORY}"
command+=" MOUNT_DIRECTORY=${MOUNT_DIRECTORY}"
command+=" SESSION=${SESSION}"
command+=" SESSION_NAME=${SESSION_NAME}"
command+=" SESSION_LOADER=${SESSION_LOADER}"
command+=" SETTINGS_MANAGER=${SETTINGS_MANAGER}"
command+=" WINDOW_MANAGER=${WINDOW_MANAGER}"
command+=" APPLICATION=${APPLICATION}"
command+=" BROWSER=${BROWSER}"
command+=" EDITOR=${EDITOR}"
command+=" PAGER=${PAGER}"
command+=" RUNNER=${RUNNER}"
command+=" VISUAL=${VISUAL}"
command+=" COLORTERM=${COLORTERM}"
command+=" DISPLAY=${DISPLAY}"
command+=" HOME=${HOME}"
command+=" LANG=${LANG}"
command+=" LOCALHOST=${LOCALHOST}"
command+=" PATH=${PATH}"
command+=" SHELL=${SHELL}"
command+=" TERM=${TERMINAL}"
command+=" TMPDIR=${TMPDIR}"
command+=" USER=${USER}"
command+=" XDG_RUNTIME_DIR=/run/user/${USER_ID}"
command+=" XDG_CACHE_HOME=${HOME}/.cache"
command+=" XDG_CONFIG_HOME=${HOME}/.config"
command+=" XDG_DATA_HOME=${HOME}/.local/share"
command+=" XDG_DATA_DIRS=/usr/local/share:/usr/share"
command+=" XDG_CONFIG_DIRS=/etc/xdg"
command+=" XAUTHORITY=${XDG_RUNTIME_DIR}/.Xauthority"
[ "${SESSION}" = "kde" ] && command+=" QT_AUTO_SCREEN_SCALE_FACTOR=0"
[ "${SESSION}" = "kde" ] && command+=" QT_SCALE_FACTOR=1"
[ "${SESSION}" = "kde" ] && command+=" QT_X11_NO_MITSHM=1"
command+=" ${SHELL} --login"

# execute proot

exec ${command}
