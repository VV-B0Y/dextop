GNU nano 4.8                                                                                                                                                             proot-user                                                                                                                                                             Modified
#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="04-13-2021"

# usage #

if [[ $# -lt 1 ]] || [[ $# -gt 3 ]]
then
        echo
        echo -e "Usage: ${script} [User Name] | [First Name] [Last Name] | [OPTION]"
        echo

        exit 1
fi

if [[ $# -eq 1 ]]
then
        user_name="${1}"
fi

if [[ $# -eq 2 ]]
then
        first_name="${1}"
        last_name="${2}"
        user_name="${first_name,,}"
fi

if [[ $# -eq 3 ]]
then
        user_name="${1}"
        first_name="${2}"
        last_name="${3}"
fi

while (($#))
do
        case "${4}" in
                -h|--help)
                        echo
                        echo -e "Usage: ${script} [User Name] | [First Name] [Last Name] | [OPTION]"
                        echo
                        echo -e "Options:"
                        echo
                        echo -e "-h, --help \t Show help and usage information."
                        echo
                        echo -e "'${script}' [ Version ${version} ]"
                        echo

                        exit
                ;;

                "")
                        # handle empty argument
                        # use default values specified in script

                        :
                ;;

                *)
                        echo
                        echo -e "Usage: ${script} [User Name] | [First Name] [Last Name] | [OPTION]"
                        echo
                        echo -e "${script}: Unknown option '${1}'"
                        echo -e "Type './${script} --help' for help and usage information."
                        echo

                        exit 1
                ;;
        esac

        shift
done

# variables #

full_name="${first_name} ${last_name}"

sudo_id=$(cat /etc/group | grep sudo | cut -d : -f 3)

# set defaults
# pass sudo GID default (27) if 'sudo' group is not setup

[ -z "${sudo_id}" ] && sudo_id=27

# verify that 'sudo' is installed:
# required for the presence of /etc/sudoers* file and directory

if [ -z "$(command -v sudo)" ]
then
	console.wrn "'sudo' utility not present or installed on system:"
	console.wrn "Install 'sudo' using the package manager and restart this utility."
	echo

	exit 1
fi

console.inf "Setting superuser privileges for user '${user_name}'."
echo

# give user superuser privileges

# /etc/group:
# group_name:x:group_number:user_name

usermod -a -G "${sudo_id}" "${user_name}"

# give user superuser privileges password override

echo "${user_name} ALL=(ALL) NOPASSWD: ALL" > "${ROOT_DIRECTORY}"/etc/sudoers.d/"${user_name}"

# fix superuser privilege errors

echo "Set disable_coredump false" >> "${ROOT_DIRECTORY}"/etc/sudo.conf

# fix ownership on user superuser privileges password override

# root:
# chmod 4755 /usr/bin/sudo

chmod 0440 /etc/sudoers.d/"${user_name}"
