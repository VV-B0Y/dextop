#!/bin/bash

# dependencies #

curl -sL get.cnsl.app/console > "${PREFIX}"/bin/console && source "${PREFIX}"/bin/console

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="08-12-2021"

# usage #

while (($#))
do
	case "${1}" in
		-h|--help)
			echo
			echo -e "Usage: ${script} [OPTION]"
			echo
			echo -e "Options:"
			echo
			echo -e "-h, --help \t Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

		*)
			echo
			echo "Usage: ${script} [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1
		;;
	esac

	shift
done

# variables #

# set defaults

[ -z "${install_option}" ] && install_option="full"

# export variables

source "${PREFIX}"/bin/globals

# download #

console.fwd "Initializing..."
echo

console.download get.dxtp.app "${BINARIES_DIRECTORY}" proot-download

# setup #

# welcome message

console.run "${BINARIES_DIRECTORY}"/proot-message

# verify architecture compatibility

console.run "${BINARIES_DIRECTORY}"/proot-architecture

# setup proot user information

console.run "${BINARIES_DIRECTORY}"/proot-information

# setup proot proc /proc entries

console.run "${BINARIES_DIRECTORY}"/proot-proc

# setup proot image

console.run "${BINARIES_DIRECTORY}"/proot-image

# setup proot group IDs

console.run "${BINARIES_DIRECTORY}"/proot-groups

# setup proot libraries preload for enhanced performance

console.run "${BINARIES_DIRECTORY}"/proot-libraries

# setup proot network requirements  - [ device < // > [ termux < // > [ proot ] ] ]

console.run "${BINARIES_DIRECTORY}"/proot-network

# setup proot install routine

console.run "${BINARIES_DIRECTORY}"/proot-initialize

# continue setup in proot environment - run 'proot-launch' as 'root'

console.run "${BINARIES_DIRECTORY}"/proot-launch

# setup expansion to default system + documentation

"${BINARIES_DIRECTORY}"/proot-expand

# setup proot package requirements

"${BINARIES_DIRECTORY}"/proot-packages

# setup proot binary fixes and links

"${BINARIES_DIRECTORY}"/proot-links

# setup proot user

"${BINARIES_DIRECTORY}"/proot-user "${user_name}"

# setup proot user superuser privileges

"${BINARIES_DIRECTORY}"/proot-superuser "${user_name}"

# setup proot file manager bookmarks

"${BINARIES_DIRECTORY}"/proot-bookmarks

# setup proot silent login

console.run "${BINARIES_DIRECTORY}"/proot-silent

# setup proot environment files

"${BINARIES_DIRECTORY}"/proot-environment

# setup proot command aliases

"${BINARIES_DIRECTORY}"/proot-aliases

# setup proot login messages

"${BINARIES_DIRECTORY}"/proot-welcome

# setup proot vnc configurations

"${BINARIES_DIRECTORY}"/vnc-setup

# setup proot initial login configuration steps

"${BINARIES_DIRECTORY}"/proot-configuration

# setup proot utilities

console.run "${BINARIES_DIRECTORY}"/proot-download

# setup checkpoint #

"${BINARIES_DIRECTORY}"/proot-checkpoint

# setup cleanup #

"${BINARIES_DIRECTORY}"/proot-clean
