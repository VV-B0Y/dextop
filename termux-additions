#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="07-19-2023"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"
echo

# variables ////////////////////////////////////////////////////////////////////

# defaults /////////////////////////////////////////////////////////////////////

# functions ////////////////////////////////////////////////////////////////////

clean () {
	rm -rf "${PREFIX}"/tmp/*.apk
}

trap 'clean' EXIT

open_intent () {
	unset open_command

	open_command+="am broadcast"
	open_command+=" --user 0"
	open_command+=" -a android.intent.action.VIEW"
	open_command+=" -n com.termux/com.termux.app.TermuxOpenReceiver"
	open_command+=" -d ${@}"

	frobulator.silence "${open_command}"
}

# notice

frobulator.inf "This utility sets up Termux project additions:"
echo

frobulator.inf "These additions are fetched directly from their respective GitHub project release pages."
echo

frobulator.wrn "'Install Unknown apps' permission be enabled for the Termux and all other Termux companion applications:"
echo

frobulator.wrn "Enable under Settings > Security and Privacy > Install unknown apps > Termux[:Application]"
echo

frobulator.ins "Select 'Package Installer' when prompted to proceed."
echo

frobulator.separate

frobulator.wrn "Selecting 'no' will only install Termux X11 packages for session display."
echo

frobulator.separate

frobulator.ask "Install Termux additons?"

read reply
echo

if [[ "${reply}" = [yY] ]] || [[ "${reply}" = [yY][eE][sS] ]]
then
	packages_list+=(
		termux-api.apk
		termux-gui.apk
		termux-x11-shell-loader.apk
		termux-x11.apk
		termux-styling.apk
		termux-tasker.apk
	)

	frobulator.inf "Setting up all Termux additional packages."
	echo
else
	packages_list+=(
		termux-x11-shell-loader.apk
		termux-x11.apk
	)

	frobulator.inf "Setting up Termux X11 packages only."
	echo
fi

frobulator.fwd "Installing..."
echo

for package in ${packages_list[@]}
do
	frobulator.download get.trmx.app "${PREFIX}"/tmp "${package}"

	frobulator.inf "Installing" "[ '${package}' ]"
	echo

	open_intent "${PREFIX}"/tmp/"${package}"

	sleep 10
done

packages_list=()

frobulator.countdown 5 "Continuing" "[ ${script} ]"
echo
