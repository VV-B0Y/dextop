#!/bin/bash

# dependencies #

. /data/data/com.termux/files/usr/bin/console
. /data/data/com.termux/files/usr/bin/dextop

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="09-14-2021"

# usage #

while (($#))
do
	case "${1}" in
		-h|--help)
			echo
			echo -e "Usage: ${script} [OPTION]"
			echo
			echo -e "Options:"
			echo
			echo -e "-h, --help \t Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

		*)
			echo
			echo "Usage: ${script} [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1
		;;
		
	esac

	shift
done

# prompt #

console.script "Setting up storage [ ${script%-*} ]"
echo

# variables #

# set defaults

# verify termux storage directory existence

if [ ! -d "${HOME}"/storage ]
then
	# does not exist:
	# enable storage permissions: requires user touch input

	console.wrn "User permission required to access storage on this device:"
	console.wrn "Internal and external storage locations are made available."
	echo

	console.inf "Storage is made accessible through proot container."
	echo

	console.usr "Select 'Allow' when prompted to proceed."
	echo

	# storage permissions dialog

	console.silence "
		am broadcast												\
			-e com.termux.app.reload_style storage					\
			-a com.termux.app.reload_style com.termux"

	console.countdown "Continuing in" 3
	echo

else
	# exists:
	# proceed with setup

	console.scs "Storage directory detected [ "${HOME}" ]."
	echo

	console.fwd "Continuing..."
	echo
fi

console.fwd "Setting up storage directories..."
echo

# remove termux storage setup defaults

rm -rf "${HOME}"/storage

# handle storage mount location

[ -d "${MAIN_DIRECTORY}"/storage ] && rm -rf "${MAIN_DIRECTORY}"/storage

# create storage directory

console.directory "${MAIN_DIRECTORY}" storage

# create symbolic links

console.fwd "Creating links..."
echo

# internal storage

if [ ! -f "${MAIN_DIRECTORY}"/storage/internal ]
then
	ln -s -f /storage/emulated/0 "${MAIN_DIRECTORY}"/storage/internal
fi

# external storage

# use /proc/mounts to detect mounted media:
# circumvents /storage access issues and DAC policy (Android 11+)

external_storage=$(cat /proc/mounts | sed -r '/[A0-Z9][-][A0-Z9]/!d' | grep "/storage" | cut -d ' ' -f 2)
uuid="${external_storage/\/storage\//}"

if [ ! -z "${external_storage}" ]
then
	console.scs "Storage media detected [ ${uuid} ]."
	echo

	if [ ! -f "${MAIN_DIRECTORY}"/storage/external ]
	then
		ln -s -f /storage/"${uuid}" "${MAIN_DIRECTORY}"/storage/external
	fi
else
	console.err "No storage media detected."
	echo

	console.fwd "Continuing..."
	echo
fi