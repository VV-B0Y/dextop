#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="08-12-2021"

# usage #

while (($#))
do
	case "${1}" in
		-h|--help)
			echo
			echo -e "Usage: ${script} [OPTION]"
			echo
			echo -e "Options:"
			echo
			echo -e "-h, --help \t Show help and usage information."
			echo
			echo -e "'${script}' [ Version ${version} ]"
			echo

			exit
		;;

		*)
			echo
			echo "Usage: ${script} [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1
		;;
	esac

	shift
done

# prompt #

console.fwd "Settign up storage preferences [ termux ]..."
echo

# variables #

# set defaults

# verify termux storage directory existence

if [ -d "${HOME}"/storage ]
then
	# exists - proceed with setup

	console.scs "Storage directory detected under"
	console.scs "${HOME}"
	echo

	console.fwd "Continuing..."
	echo
else
	# does not exist - enable storage permissions: requires user touch input

	console.wrn "Termux requires user permission to access storage on this device..."
	echo

	console.wrn "Both internal and external storage are made available:"
	echo

	console.inf "Allowing access greatly benefits the desktop experience"
	console.inf "and will make the device's storage visble and accessible"
	console.inf "through your desktop session and file manager."
	echo

	console.usr "Select 'Allow' or 'Deny' when prompted"
	console.usr "to enable or disable storage access permission."
	echo

	console.countdown "Permissions dialog in:" 3
	echo

	# trigger storage permissions dialog

	# am broadcast	--user 0												\
	#				--es com.termux.app.reload_style storage				\
	#				-a com.termux.app.reload_style com.termux > /dev/null

	termux-setup-storage

	# wait 5 seconds to permit storage permissions approval

	console.countdown "Waiting" 3
	echo
fi

# remove termux storage link defaults

rm -rf "${HOME}"/storage

# handle storage mount location

[ -d "${MAIN_DIRECTORY}"/storage ] && rm -rf "${MAIN_DIRECTORY}"/storage

# create directory

mkdir -p "${MAIN_DIRECTORY}"/storage || :

# create new symbolic links for storage mounts

# internal storage

[ ! -f "${MAIN_DIRECTORY}"/storage/internal ] && ln -s -f /storage/emulated/0 "${MAIN_DIRECTORY}"/storage/internal

# external storage

# use /proc/mounts to detect mounted media:
# circumvents /storage access issues and DAC policy (Android 11+)

external_storage=$(cat /proc/mounts | sed -r '/[A0-Z9][-][A0-Z9]/!d' | grep "/storage" | cut -d ' ' -f 2)
uuid="${external_storage/\/storage\//}"

if [ ! -z "${external_storage}" ]
then
	console.scs "Storage media detected [ UUID: ${uuid} ]."
	echo

	[ ! -f "${MAIN_DIRECTORY}"/storage/external ] && ln -s -f /storage/"${uuid}" "${MAIN_DIRECTORY}"/storage/external

	console.wait 1
else
	console.err "No storage media detected."
	echo

	console.fwd "Continuing..."
	echo
fi

console.fwd "Linking..."
echo
