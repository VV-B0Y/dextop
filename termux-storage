#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

[[ -z $(command -v frobulator) ]] && curl -s -L get.frbltr.app > "${PREFIX}"/bin/frobulator

. "${PREFIX}"/bin/frobulator

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="01-21-2022"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulate.script "Setting up ${script#*-}"
echo

# variables #

# defaults #

# functions #

storage_intent () {
		unset storage_command

		storage_command+="am broadcast"
		storage_command+=" -e com.termux.app.reload_style storage"
		storage_command+=" -a com.termux.app.reload_style com.termux"

		frobulate.silence "exec ${storage_command}"
}

# verify termux storage directory existence

if [ ! -d "${HOME}"/storage ]
then
	# does not exist:
	# enable storage permissions: requires user touch input

	frobulate.wrn "User permission required to access storage on this device:"
	frobulate.wrn "Internal and external storage locations are made available."
	echo

	frobulate.inf "Storage is made accessible through container."
	echo

	frobulate.ins "Select 'Allow' when prompted to proceed."
	echo

	frobulate.separate

	# storage permissions dialog

	storage_intent > /dev/null

	frobulate.countdown 3 "Continuing" "[ ${script} ]"
	echo

else
	# exists:
	# proceed with setup

	frobulate.scs "Storage directory detected" "[ "${HOME}" ]"
	echo

	frobulate.fwd "Continuing..."
	echo
fi

frobulate.fwd "Setting up storage..."
echo

# handle storage mount locations

# /home

[ -d "${HOME}"/storage ]   && rm -rf "${HOME}"/storage

# /media

[ -d "${PREFIX}"/media ]   && rm -rf "${PREFIX}"/media/*

# /storage

[ -d "${PREFIX}"/storage ] && rm -rf "${PREFIX}"/storage/*

# generate symbolic links

# link internal storage

frobulate.fwd "Linking..."
echo

if [ ! -f "${PREFIX}"/media/internal ]
then
	ln -s -f /storage/emulated/0 "${PREFIX}"/media/internal
fi

if [ ! -f "${PREFIX}"/storage/internal ]
then
	ln -s -f /storage/emulated/0 "${PREFIX}"/storage/internal
fi

# link external storage

# use /proc/mounts to detect mounted media:
# circumvents /storage access issues and DAC policy (Android 11+)

external_storage=$(cat /proc/mounts | sed -r '/[A0-Z9][-][A0-Z9]/!d' | grep "/storage" | cut -d ' ' -f 2)
uuid="${external_storage/\/storage\//}"

if [ ! -z "${external_storage}" ]
then
	frobulate.scs "Storage media detected" "[ ${uuid} ]"
	echo

	if [ ! -f "${PREFIX}"/media/external ]
	then
		ln -s -f /storage/"${uuid}" "${PREFIX}"/media/external
	fi

	if [ ! -f "${PREFIX}"/storage/external ]
	then
		ln -s -f /storage/"${uuid}" "${PREFIX}"/storage/external
	fi
else
	uuid="N/A"

	frobulate.err "No storage media detected" "[ ${uuid} ]"
	echo

	frobulate.fwd "Continuing..."
	echo
fi
